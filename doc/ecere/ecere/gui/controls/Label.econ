{
   name = "Label",
   description = "Static text, used to provide information to the user.",
   usage = "Can be dragged from the toolbox directly to the source, or into the form editor.\n"
      "\n"
      "Otherwise, can be manually entered in to the statements section of code, in the definition of it's parent.\n"
      "\n"
      "Label inherits qualities defined in the Window class.\n"
      "\n"
      "All of Label's qualities can be defined in its instantiation. Note, that the first quality that should be set in the instantiation is the Parent. If this is not set, then Label is constructed as a free object rather than a child. This would result in Label not being closed when the program was closed. Most commonly the parent is the this object, as they are defined within the parent class.\n"
      "\n"
      "Some of the most commonly overridden qualities are:\n"
      "   font:       Specifies the font to be used for the Label, and it's properties.\n"
      "   position: Specifies the top left corner of the Label in relation to the top left corner of the parent.\n"
      "   size:       Specifies the size of the Label and/or the GroupBox\n"
      "   text:       Specifies the text to be seen on the Label.",
   example = "class Form1 : Window\n"
      "{\n"
      "   Label label1 { this, text = \"This is a label\", position = { 10, 10 } };\n"
      "   Label label2 { this, text = \"This is a bold label\", font = \"Tahoma\", 8.25f, bold = true, position = { 10, 40 } };\n"
      "   Label test { this, text = \"This is a label!\", inactive = false, size = { 108, 44 }, position = { 56, 72 }, labeledWindow = editBox1, true };\n"
      "   Label groupBox { this, text = \"This is a Group Box\", size = { 100, 100 }, isGroupBox = true };\n"
      "}\n"
      "Form1 form1 {};",
   remarks = "Label is exempt from the usual tabCycle process, because it's inactive property is by default set to true. However, when isGroupBox is true, then inactive by default is set to false, since it would be desired to have the children of the GroupBox as part of the tabCycling.",
   also = "Label Properties from the Window class:\n"
      "Appearance: \n"
      "background, borderStyle, cursor, font, foreground, opacity, text.\n"
      "Behaviour:\n"
      "clickThrough, disabled, displayDriver, dontHideScroll, dontScrollHorz, dontScrollVert, hotKey, inactive, interim, isActiveClient, isDefault, isModal, isRemote, master, modifyVirtualArea, noCycle, scroll, scrollArea, snapHorzScroll, snapVertScroll, state, tabCycle, visible.\n"
      "Data:\n"
      "id\n"
      "Design:\n"
      "name\n"
      "Document:\n"
      "fileName, isDocument, modifiedDocument.\n"
      "Layout:\n"
      "anchor, clientSize, is3D, maxClientSize, minClientSize, nonClient, parent, position, size, sizeAnchor.\n"
      "Misc:\n"
      "alphaBlend, autoCreate, closing, creationActivation, fullRender, icon, moveable, useSharedMemory.\n"
      "Window Style:\n"
      "drawBehind, hasClose, hasHorzScroll, hasMaximize, hasMenuBar, hasMinimize, hasStatusBar, hasVertScroll, menu, mergeMenus, showInTaskBar, stayOnTop\n"
      "",
   properties = [
      {
         "isGroupBox",
         {
            description = "If false, the Label is simply static text. If true, the Label is attached to a frame, which is used to visually group components together. The size of this frame is equal to the size of the Label."
         }
      },
      {
         "labeledWindow",
         {
            description = "Enables the Label to be attached to another control of Window class, or derived from the Window class, as a \"Window Label.\" \n"
               "*Developer Note: Currently, there is a bug which prevents this from working properly in the Form Editor, however it can be coded directly into the source."
         }
      }
   ]
}
